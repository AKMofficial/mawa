import { Pilgrim, PilgrimGroup } from '@/types/pilgrim';

export const mockPilgrims: Pilgrim[] = [
  {
    id: '1',
    registrationNumber: 'HAJ2024001',
    nationalId: '1234567890',
    passportNumber: 'A12345678',
    firstName: 'أحمد',
    lastName: 'الحمد',
    fullName: 'أحمد الحمد',
    birthDate: new Date('1980-05-15'),
    age: 44,
    gender: 'male',
    nationality: 'السعودية',
    phoneNumber: '+966501234567',
    emergencyContact: 'محمد الحمد',
    emergencyPhone: '+966502345678',
    hasSpecialNeeds: false,
    status: 'arrived',
    arrivalDate: new Date('2024-06-10'),
    assignedBed: 'A-101',
    assignedHall: 'القاعة أ',
    groupId: 'group1',
    groupName: 'مجموعة الرياض',
    createdAt: new Date('2024-01-15'),
    updatedAt: new Date('2024-06-10'),
  },
  {
    id: '2',
    registrationNumber: 'HAJ2024002',
    nationalId: '2234567890',
    passportNumber: 'B22345678',
    firstName: 'فاطمة',
    lastName: 'العلي',
    fullName: 'فاطمة العلي',
    birthDate: new Date('1975-08-20'),
    age: 49,
    gender: 'female',
    nationality: 'الكويت',
    phoneNumber: '+96590123456',
    hasSpecialNeeds: true,
    specialNeedsType: 'wheelchair',
    specialNeedsNotes: 'تحتاج كرسي متحرك',
    status: 'arrived',
    arrivalDate: new Date('2024-06-11'),
    assignedBed: 'D-201',
    assignedHall: 'القاعة د',
    groupId: 'group2',
    groupName: 'مجموعة الكويت',
    createdAt: new Date('2024-01-20'),
    updatedAt: new Date('2024-06-11'),
  },
  {
    id: '3',
    registrationNumber: 'HAJ2024003',
    nationalId: '3234567890',
    firstName: 'محمد',
    lastName: 'الشمري',
    fullName: 'محمد الشمري',
    birthDate: new Date('1990-03-10'),
    age: 34,
    gender: 'male',
    nationality: 'السعودية',
    phoneNumber: '+966551234567',
    hasSpecialNeeds: false,
    status: 'expected',
    groupId: 'group1',
    groupName: 'مجموعة الرياض',
    createdAt: new Date('2024-02-01'),
    updatedAt: new Date('2024-02-01'),
  },
  {
    id: '4',
    registrationNumber: 'HAJ2024004',
    nationalId: '4234567890',
    passportNumber: 'C32345678',
    firstName: 'عائشة',
    lastName: 'السالم',
    fullName: 'عائشة السالم',
    birthDate: new Date('1955-12-25'),
    age: 69,
    gender: 'female',
    nationality: 'البحرين',
    phoneNumber: '+97333123456',
    emergencyContact: 'علي السالم',
    emergencyPhone: '+97333234567',
    hasSpecialNeeds: true,
    specialNeedsType: 'mobility',
    specialNeedsNotes: 'صعوبة في المشي لمسافات طويلة',
    status: 'arrived',
    arrivalDate: new Date('2024-06-09'),
    assignedBed: 'E-301',
    assignedHall: 'القاعة هـ',
    createdAt: new Date('2024-02-10'),
    updatedAt: new Date('2024-06-09'),
  },
  {
    id: '5',
    registrationNumber: 'HAJ2024005',
    nationalId: '5234567890',
    firstName: 'عبدالله',
    lastName: 'القحطاني',
    fullName: 'عبدالله القحطاني',
    birthDate: new Date('1988-07-18'),
    age: 36,
    gender: 'male',
    nationality: 'السعودية',
    phoneNumber: '+966561234567',
    hasSpecialNeeds: false,
    status: 'no_show',
    groupId: 'group1',
    groupName: 'مجموعة الرياض',
    createdAt: new Date('2024-02-15'),
    updatedAt: new Date('2024-06-15'),
  },
  {
    id: '6',
    registrationNumber: 'HAJ2024006',
    nationalId: '6234567890',
    passportNumber: 'D42345678',
    firstName: 'مريم',
    lastName: 'الدوسري',
    fullName: 'مريم الدوسري',
    birthDate: new Date('1982-04-05'),
    age: 42,
    gender: 'female',
    nationality: 'قطر',
    phoneNumber: '+97455123456',
    hasSpecialNeeds: false,
    status: 'arrived',
    arrivalDate: new Date('2024-06-12'),
    assignedBed: 'F-401',
    assignedHall: 'القاعة و',
    groupId: 'group3',
    groupName: 'مجموعة قطر',
    createdAt: new Date('2024-03-01'),
    updatedAt: new Date('2024-06-12'),
  },
  {
    id: '7',
    registrationNumber: 'HAJ2024007',
    nationalId: '7234567890',
    firstName: 'سالم',
    lastName: 'العتيبي',
    fullName: 'سالم العتيبي',
    birthDate: new Date('1970-11-30'),
    age: 54,
    gender: 'male',
    nationality: 'السعودية',
    phoneNumber: '+966571234567',
    hasSpecialNeeds: false,
    status: 'departed',
    arrivalDate: new Date('2024-06-08'),
    departureDate: new Date('2024-06-20'),
    groupId: 'group1',
    groupName: 'مجموعة الرياض',
    createdAt: new Date('2024-03-10'),
    updatedAt: new Date('2024-06-20'),
  },
  {
    id: '8',
    registrationNumber: 'HAJ2024008',
    nationalId: '8234567890',
    passportNumber: 'E52345678',
    firstName: 'نورة',
    lastName: 'الحربي',
    fullName: 'نورة الحربي',
    birthDate: new Date('1995-01-20'),
    age: 29,
    gender: 'female',
    nationality: 'الإمارات',
    phoneNumber: '+971501234567',
    hasSpecialNeeds: false,
    status: 'expected',
    groupId: 'group4',
    groupName: 'مجموعة الإمارات',
    createdAt: new Date('2024-03-15'),
    updatedAt: new Date('2024-03-15'),
  },
];

export const mockGroups: PilgrimGroup[] = [
  {
    id: 'group1',
    name: 'مجموعة الرياض',
    leaderName: 'خالد المطيري',
    leaderPhone: '+966501111111',
    country: 'السعودية',
    totalMembers: 50,
    arrivalDate: new Date('2024-06-08'),
    departureDate: new Date('2024-06-25'),
  },
  {
    id: 'group2',
    name: 'مجموعة الكويت',
    leaderName: 'عبدالعزيز الصباح',
    leaderPhone: '+96590222222',
    country: 'الكويت',
    totalMembers: 30,
    arrivalDate: new Date('2024-06-10'),
    departureDate: new Date('2024-06-27'),
  },
  {
    id: 'group3',
    name: 'مجموعة قطر',
    leaderName: 'حمد الثاني',
    leaderPhone: '+97444333333',
    country: 'قطر',
    totalMembers: 25,
    arrivalDate: new Date('2024-06-12'),
    departureDate: new Date('2024-06-28'),
  },
  {
    id: 'group4',
    name: 'مجموعة الإمارات',
    leaderName: 'راشد النهيان',
    leaderPhone: '+971504444444',
    country: 'الإمارات',
    totalMembers: 40,
    arrivalDate: new Date('2024-06-15'),
    departureDate: new Date('2024-06-30'),
  },
];

export function generateMockPilgrims(count: number): Pilgrim[] {
  const firstNames = ['أحمد', 'محمد', 'عبدالله', 'خالد', 'سالم', 'فاطمة', 'عائشة', 'مريم', 'نورة', 'سارة'];
  const lastNames = ['الحمد', 'العلي', 'الشمري', 'السالم', 'القحطاني', 'الدوسري', 'العتيبي', 'الحربي', 'المطيري', 'الصباح'];
  const nationalities = ['السعودية', 'الكويت', 'البحرين', 'قطر', 'الإمارات', 'عمان'];
  const statuses: Pilgrim['status'][] = ['expected', 'arrived', 'departed', 'no_show'];
  
  const pilgrims: Pilgrim[] = [...mockPilgrims];
  
  for (let i = pilgrims.length + 1; i <= count; i++) {
    const firstName = firstNames[Math.floor(Math.random() * firstNames.length)];
    const lastName = lastNames[Math.floor(Math.random() * lastNames.length)];
    const gender = Math.random() > 0.5 ? 'male' : 'female';
    const birthYear = 1950 + Math.floor(Math.random() * 55);
    const hasSpecialNeeds = Math.random() > 0.9;
    const status = statuses[Math.floor(Math.random() * statuses.length)];
    
    const pilgrim: Pilgrim = {
      id: i.toString(),
      registrationNumber: `HAJ2024${i.toString().padStart(3, '0')}`,
      nationalId: `${i}234567890`,
      passportNumber: Math.random() > 0.3 ? `P${i}2345678` : undefined,
      firstName,
      lastName,
      fullName: `${firstName} ${lastName}`,
      birthDate: new Date(`${birthYear}-${Math.floor(Math.random() * 12) + 1}-${Math.floor(Math.random() * 28) + 1}`),
      age: new Date().getFullYear() - birthYear,
      gender: gender as 'male' | 'female',
      nationality: nationalities[Math.floor(Math.random() * nationalities.length)],
      phoneNumber: `+966${5}${Math.floor(Math.random() * 100000000)}`,
      hasSpecialNeeds,
      specialNeedsType: hasSpecialNeeds ? ['wheelchair', 'mobility', 'visual'][Math.floor(Math.random() * 3)] as any : null,
      status,
      arrivalDate: status === 'arrived' || status === 'departed' ? new Date('2024-06-' + (8 + Math.floor(Math.random() * 10))) : undefined,
      departureDate: status === 'departed' ? new Date('2024-06-' + (18 + Math.floor(Math.random() * 10))) : undefined,
      assignedBed: status === 'arrived' ? `${String.fromCharCode(65 + Math.floor(Math.random() * 6))}-${100 + i}` : undefined,
      assignedHall: status === 'arrived' ? `القاعة ${String.fromCharCode(1571 + Math.floor(Math.random() * 6))}` : undefined,
      groupId: `group${Math.floor(Math.random() * 4) + 1}`,
      groupName: mockGroups[Math.floor(Math.random() * 4)].name,
      createdAt: new Date('2024-' + (Math.floor(Math.random() * 6) + 1) + '-' + (Math.floor(Math.random() * 28) + 1)),
      updatedAt: new Date('2024-06-' + (Math.floor(Math.random() * 20) + 1)),
    };
    
    pilgrims.push(pilgrim);
  }
  
  return pilgrims;
}